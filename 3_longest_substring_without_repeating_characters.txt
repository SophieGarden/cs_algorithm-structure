Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        # sliding window
        left = 0
        d = {}
        max_l = 0
        for i, c in enumerate(s):
            if c in d:
                left = max(left, d[c] + 1) 
            d[c] = i
            max_l = max(max_l, i-left+1)
        return max_l
